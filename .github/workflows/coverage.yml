name: Coverage

on:
  push:
    branches: [ master ]

jobs:
  coverage_and_tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install deps
        run: poetry install --no-root

      - name: Install jq
        run: sudo apt install jq

      - name: Run postgres
        run: docker run -p 5432:5432 -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=test -d postgres:13

      - name: Add env vars
        run: |
          echo GROUPS_COUNT=10 >> $GITHUB_ENV
          echo STUDENTS_IN_GROUP_COUNT=30 >> $GITHUB_ENV
          echo TYPE_REPORT=db >> $GITHUB_ENV
          echo USER_DB=postgres >> $GITHUB_ENV
          echo PASSWORD_DB=postgres >> $GITHUB_ENV
          echo NAME_DB=test >> $GITHUB_ENV
          echo HOST_DB=localhost >> $GITHUB_ENV

      - name: Get percent coverage
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)/app
          poetry run pytest --cov app
          poetry run coverage json
          TOTAL=$(cat coverage.json | jq .totals | jq .percent_covered)
          TOTAL=$(echo "$TOTAL*10" | bc)
          echo TOTAL=$(echo "scale=0; $TOTAL/10" | bc) >> $GITHUB_ENV

      - name: Create coverage badge
        uses: schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 6142fbd47742665fa2e00b989f7f6935
          filename: my_coverage.json
          label: Coverage
          message: ${{ env.TOTAL }}%
          valColorRange: ${{ env.TOTAL }}
          maxColorRange: 100
          minColorRange: 0
